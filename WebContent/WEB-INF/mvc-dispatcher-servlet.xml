<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans     
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context 
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/tx 
                            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">    
    
    
    <!--Comment this while deploy to server-->
    <bean id="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" >
            <list>
                <value>
                    classpath:database.properties
                </value>
            </list>
        </property>
    </bean>
    
    <context:component-scan base-package="id.co.ahm" />
	<bean id="ahmjxsysLogservicesDao"
		class="id.co.ahm.jx.sys.app000.dao.impl.AhmjxsysLogservicesDaoImpl">
	</bean>
	<bean id="tokenPstUtil"
		class="id.co.ahm.jxf.security.TokenPstUtil">
	</bean>
	<bean id="securityFilterPst"
		class="id.co.ahm.jx.filter.SecurityFilterPst">
	</bean>
	
	
    
     <!--Uncomment this while deploy to server--> 
   <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="jdbc/ahmpsDS" />
    </bean>  -->
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />
        
    </bean>
        
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">        
        <property name="packagesToScan">
            <list>
                <value>id.co.ahm.sd.nis.app000.model</value>
             <!--    <value>id.co.ahm.jx.sys.app000.model</value>
                <value>id.co.ahm.jx.tmp.app000.model</value> -->
            </list>
        </property>
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--Maksimal Upload 10 MB--> 
        <property name="maxUploadSize" value="10000000" />
    </bean>

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->    
    <tx:annotation-driven />
    
    <context:component-scan base-package="id.co.ahm.jxf" />
    <context:component-scan base-package="id.co.ahm.jx" />
    <context:component-scan base-package="id.co.ahm.mm" />
    
    <mvc:interceptors>
        <bean class="id.co.ahm.jx.interceptor.Interceptor" />
    </mvc:interceptors> 
    
    <mvc:annotation-driven />

</beans>